allprojects {
    group = 'com.thoughtworks.i1'
    version = '0.1.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'idea'
}

subprojects {
    repositories {
        mavenLocal();
        mavenCentral()
        mavenRepo url: "https://code.lds.org/nexus/content/groups/main-repo";
        mavenRepo url: "http://download.java.net/maven/2", artifactUrls: ["http://maven.springframework.org/milestone", "https://repository.jboss.org/nexus/content/groups/public/", "http://mvnrepository.com/artifact"]
    }
    project.ext{
        jerseyVersion = '1.16'
        guiceVersion="3.0"
        guavaVersion = '13.0.1'
        jacksonVersion = '2.1.2'
        flywayVersion = '2.0.2'
        slf4jVersion = '1.7.2'
        logbackVersion = '1.0.7'

        jettyVersion='9.0.0.M3'

        hamCrestVersion = '1.1'
        mockitoVersion = '1.9.5-rc1'
        junitVersion = '4.10'

    }

    sourceCompatibility = '1.7'

    if(project.name == 'i1-commons'){
        return;
    }

    if(project.name == 'i1-test-commons'){
        return;
    }

    apply plugin: "war"
    apply plugin: "jetty"
    apply plugin: 'maven'

    // Since it's a war project, we add src/main/webapp as a resource folder
    sourceSets {
        main {
            resources {
                srcDirs += 'src/main/webapp'
            }
        }
    }

    // You could enable debug by "gradle jettyRun -Pdebug=true" or "gradle jettyRun -Pdebug"
    if(project.hasProperty("debug")){
        println "debug mode is enabled"
        project.ext{
            GRADLE_OPTS='-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005'
        }
    }

    dependencies {
        compile project(':i1-commons')

        // Use guice as IOC framework
        compile "com.google.inject.extensions:guice-persist:$guiceVersion"
        compile "com.google.inject:guice:$guiceVersion"

        // Use flyway as db migration tool
        compile "com.googlecode.flyway:flyway-core:$flywayVersion"

        // Use jersey as RESTful framework
        compile "com.sun.jersey:jersey-core:$jerseyVersion"
        compile "com.sun.jersey:jersey-server:$jerseyVersion"
        compile "com.sun.jersey:jersey-servlet:$jerseyVersion"
        compile "com.sun.jersey:jersey-json:$jerseyVersion"
        compile "com.sun.jersey.contribs:jersey-guice:$jerseyVersion"

//        compile 'javax.servlet:javax.servlet-api:3.0.1'
        // Use javax validation: JSR303
//        compile 'javax.validation:validation-api:1.0.0.GA'
        // Use javax persistence: JSR317
//        compile 'javax.persistence:persistence-api:1.0.2'

        // Use embedded H2 database
        compile 'com.h2database:h2:1.3.170'

        testCompile project(':i1-test-commons')

    }

    idea {
        module {
            inheritOutputDirs = false
            print project.name + " output dir: " + sourceSets.main.output.resourcesDir
            outputDir = file("out")
            testOutputDir = file("out")

            excludeDirs += file("out")
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: uri('../repository'))
            }
        }
    }

    // In default we use port 8051 when we run webapp with "gradle clean jettyRun"
    httpPort = 8051
}
